{"version":3,"sources":["App.tsx","index.tsx"],"names":["useState","files","setFiles","a","window","electron","console","log","ipcRenderer","send","onClick","fs","result","readdirSync","error","message","map","file","index","key","ReactDOM","render","App","document","getElementById"],"mappings":"oMAEe,aACb,MAA0BA,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KADmB,4CAWnB,8BAAAC,EAAA,wDACuBC,OAAbC,EADV,EACUA,SACRC,QAAQC,IAAIF,GAEZA,EAASG,YAAYC,KAAK,OAAQ,UAJpC,4CAXmB,sBAiBnB,OACE,6BACE,4BAAQC,QAjBZ,WACE,IAAQC,EAAOP,OAAPO,GACR,IACE,IAAMC,EAASD,EAAGE,YAAY,QAC9BX,EAASU,GACT,MAAOE,GACPR,QAAQC,IAAIO,EAAMC,YAWlB,WACA,6BAAMd,EAAMe,KAAI,SAACC,EAAMC,GAAP,OAAiB,0BAAMC,IAAKD,GAAQD,OACpD,4BAAQP,QArBO,4CAqBf,SCnBNU,IAASC,OACR,kBAACC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.a7f7bf26.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default () => {\r\n  const [files, setFiles] = useState([])\r\n  function open() {\r\n    const { fs } = window as any\r\n    try {\r\n      const result = fs.readdirSync('C://')\r\n      setFiles(result)\r\n    } catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }\r\n  async function click() {\r\n    const { electron } = window as any\r\n    console.log(electron)\r\n\r\n    electron.ipcRenderer.send('list', 'huahua')\r\n  }\r\n  return (\r\n    <div>\r\n      <button onClick={open}>Cç›˜</button>\r\n      <div>{files.map((file, index) => <span key={index}>{file}</span>)}</div>\r\n      <button onClick={click}>btn</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n// ;(async ()=>{\r\n//   let list = await Query<any>(`SELECT * FROM user ORDER BY create_at DESC`)\r\n//   console.log(list)\r\n  \r\n// })()","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n\t<App/>,\r\n\tdocument.getElementById('root')\r\n)\r\n"],"sourceRoot":""}